package Fabulousoft.rpgtools;

import java.io.BufferedReader;

import java.io.FileInputStream;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;


class Noun {
	
	String	single;
	String	plural;
	
	
	public Noun(String wordString) {
	
		String[] words = wordString.split("\\");
		single = words[0];
		if (words.length > 0)
			plural = words[1];
	}
	
	
}

class Conjunction {
	
	String	conjunction;
	
	
}

public class ProphecyActivity extends Activity {
	
	
	ArrayList<String>	conjunctionList			= new ArrayList<String>();
	ArrayList<String>	conjunctionSpecialList	= new ArrayList<String>();
	ArrayList<Noun>		nounCommonList			= new ArrayList<Noun>();
	ArrayList<Noun>		nounProperList			= new ArrayList<Noun>();
	ArrayList<String>	verbList				= new ArrayList<String>();
	ArrayList<String>	adjectiveList			= new ArrayList<String>();
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
	
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_prophecy);
		
		
		
		try {
			
			InputStream is = getAssets().open("WordList.xml");
			Document xmlDoc = DocumentBuilderFactory.newInstance()
				.newDocumentBuilder().parse(is);
			
			is.close();
			
			Element rootNode = xmlDoc.getDocumentElement();
			rootNode.normalize();
			
			Element conjunctionsNode = (Element) rootNode.getElementsByTagName("conjunctions").item(
				0);
			Element normalNode = (Element) conjunctionsNode.getElementsByTagName("normal").item(0);
			String conjunctionsString = normalNode.getTextContent().trim();
			
//			String[] words = conjunctionsString.split("\\s+");
			for (String word : conjunctionsString.split("\\s+"))
				conjunctionList.add(word);
			
			
//			Toast.makeText(this, conjunctionList.size(), Toast.LENGTH_LONG).show();
			
			
//			Element specialConjNode = (Element) conjunctionsNode
//				.getElementsByTagName("special").item(0);
//			
//			
//			
//			
//			Node nounsNode = rootNode.getElementsByTagName("nouns").item(0);
//			String nounsString = nounsNode.getNodeValue();
			
			
			
			
		} catch (IOException e) {
			e.printStackTrace();
			Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
		} catch (SAXException e) {
			e.printStackTrace();
			Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
		} catch (ParserConfigurationException e) {
			e.printStackTrace();
			Toast.makeText(this, e.getMessage(), Toast.LENGTH_LONG).show();
		}
		
	}
	
	
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
	
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.prophecy, menu);
		return true;
	}
	
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
	
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
